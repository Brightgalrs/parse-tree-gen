
==================== FINAL INTERFACE ====================
2016-09-08 01:54:46.000386 UTC

interface parse_Iaj1kxNSeaZ4PQxYHNqcNV:ParseTreeParse 7103
  interface hash: bb565012f8c364b6e13cdd6f426674a6
  ABI hash: 63d46f441db8f0a823f4c2f6b6885fee
  export-list hash: 96b5e4dbe288bf2603f760e98407238b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  ParseTreeGen.makeTenseP
  ParseTreeParse.parseTenseP
module dependencies: ParseTreeGen XBarType
package dependencies: MonadPrompt-1.0.0.5@Monad_5vpMHuuRBzi4bKjpRN3A9L
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      flexible-defaults-0.0.1.2@flexi_70LqvhG3vbS8bRvV8pHtMk
                      ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L
                      random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW
                      random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr
                      rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG
                      syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE template-haskell-2.10.0.0
                      th-extras-0.0.0.4@thext_LRY1RUMy7ShLl2tqhMyHdO
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source
         syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE:Data.Generics.Instances
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ParseTreeGen ef2dc7121ef181e68e7d2b57f3073b91
  exports: 16f0cbfbc18df2707df2c6542fa145c4
  makeTenseP 06b63c0d792991047a038e128dc68704
import  -/  XBarType 2b495b8df540868f2aed6f3c79e77ea3
  exports: cdfa8791cd1b5c57acf699a4767e732e
  Adj 089610700439ad05b501b77ba813ddc6
  Adj 2511599010f4679fd1f96a068a337fc9
  AdjBar 02124ea1683e70a8b818aacb204bc09d
  AdjBar1 3a7e60d8ed7cbd881c23ec0e9b4a9a07
  AdjBar2 91f72bd2b491a592eddb2aba788350e8
  AdjBar3 0c925040ad76cc80fd03801411551d4e
  AdjBar4 088d1b72bbf71c5ba540b7e6959397b5
  AdjP 08ed5009d431a733ddc014a87c40161b
  AdjP 02124ea1683e70a8b818aacb204bc09d
  Adv e8ad1c93c141437b64cb8e04155f2e08
  Adv ba5a5c8a5ee08a1d21e0367a08f8d6f3
  AdvBar 77f0cb02dae05fcf2a6de9acb7c0ef73
  AdvBar 5f5402ea3488a02305311952da350e18
  AdvP 67b6d3b94b11520b33a07c2c1193bc3a
  AdvP 02124ea1683e70a8b818aacb204bc09d
  Comp 1bdb444a0937de3989c8465624c7669a
  Comp bea2d20556a8dd0cb79e972c0036a427
  CompBar b0073363e88c5a76772f53e3c89cf54b
  CompBar fb038bbed18be6b64f9e6f9cf00f0502
  CompP cd844e1138e0525ee9e6381b1aae2f3c
  CompP fb038bbed18be6b64f9e6f9cf00f0502
  Det d017a5a50914b3f2dbf5a36a136cb68f
  Det 33e73b79582f8d58682eaaecf554e200
  DetBar 3bad3ec83ea26a278f8628759d952068
  DetBar 02124ea1683e70a8b818aacb204bc09d
  DetP 5327110809b948d1dc7cd6691bc55d16
  DetP 02124ea1683e70a8b818aacb204bc09d
  NoOpt 99bd8eb129de80de1f2ddc3f781f3410
  Noun 2084ca2f4952bd24d5d18f6dbdfeec33
  Noun 02453c63caafb12e8f01f3a349c80aee
  NounBar 02124ea1683e70a8b818aacb204bc09d
  NounBar1 c4a64c153c95e9d9dff680977a02b057
  NounBar2 bb6742ed60e01724fe0e0e8c2ef8f4b9
  NounBar3 4837f32af06f771f73aa62e4c387f8f8
  NounP fdf3dfd230c14f24df3192832e537e99
  NounP 02124ea1683e70a8b818aacb204bc09d
  Prep 34b0b3f451d16ca1086abdca9abe3d4c
  Prep 2ced66c8e6669edb41a872360cd754e3
  PrepBar 02124ea1683e70a8b818aacb204bc09d
  PrepBar1 f64a9cc128368f296cdcf4ba1c20fc7e
  PrepBar2 82f8580ec002d575cf86b37523f64738
  PrepP c3a188d64e6f290ee100336b7d24046d
  PrepP 02124ea1683e70a8b818aacb204bc09d
  Tense ea39a47b362169eaaddf050f1569bd18
  Tense 1269e92afa0f761c0ceaf60b2b8908d7
  TenseBar 25d2ce099f72a08bb21d1cc621a3b353
  TenseBar fb038bbed18be6b64f9e6f9cf00f0502
  TenseP a4b427bf4f041ff8768d8e2ef673e978
  TenseP fb038bbed18be6b64f9e6f9cf00f0502
  Verb 66d8d6a18ba8ebf5d6aa6003dad7e1da
  Verb 5bcdc0bf65976e0efbd79945f96ac234
  VerbBar fb038bbed18be6b64f9e6f9cf00f0502
  VerbBar1 cba37aba49b48b65b208d7c75c964881
  VerbBar2 4a43ebbf43dc3a4c4b479e7c598d4dd2
  VerbBar3 9fe453d9753a5706faf03776e6291c1a
  VerbBar4 38d9cf0b8fd5802b8807e0e37ab133dc
  VerbBar5 2ac1432fb96c2e805df6fdd43306c394
  VerbP cb282eb81275fef8f88fe800fdb6b1a4
  VerbP fb038bbed18be6b64f9e6f9cf00f0502
  YesOpt 38f86c74c48a35bf4c9c11945f04cb04
import  -/  random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L:Data.Random.Extras 5dc1684f88e3f2655bfb5d7aca60bf5c
import  -/  rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG:Data.RVar 9b7fbdb5f1778e76b8a65f45a17cccb1
4e68d12647f9a53f541c257da530272e
  $wparseDetP ::
    XBarType.Optional XBarType.Det -> XBarType.NounP -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(1*U)>,
     Inline: [0],
     Unfolding: (\ ww :: XBarType.Optional XBarType.Det
                   ww1 :: XBarType.NounP ->
                 case ww of wild {
                   XBarType.YesOpt det
                   -> case det of wild1 { XBarType.Det str ->
                      GHC.Base.++
                        @ GHC.Types.Char
                        str
                        (GHC.CString.unpackAppendCString#
                           " "#
                           (case ww1 of wild2 { XBarType.NounP nounbar ->
                            ParseTreeParse.parseNounBar nounbar })) }
                   XBarType.NoOpt
                   -> case ww1 of wild1 { XBarType.NounP nounbar ->
                      ParseTreeParse.parseNounBar nounbar } }) -}
1cf2836cadc97a1e98a105168989eb37
  $wparseTenseP ::
    XBarType.Optional XBarType.Det
    -> XBarType.NounP -> XBarType.TenseBar -> [GHC.Types.Char]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U(1*U),1*U(1*U))>,
     Inline: [0],
     Unfolding: (\ ww :: XBarType.Optional XBarType.Det
                   ww1 :: XBarType.NounP
                   ww2 :: XBarType.TenseBar ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (ParseTreeParse.$wparseDetP ww ww1)
                   (GHC.CString.unpackAppendCString#
                      " "#
                      (case ww2 of wild { XBarType.TenseBar tense verbp ->
                       case tense of wild1 { XBarType.Tense str ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         str
                         (GHC.CString.unpackAppendCString#
                            " "#
                            (case verbp of wild2 { XBarType.VerbP verbbar ->
                             ParseTreeParse.parseVerbBar verbbar })) } }))) -}
464f9ed1e936cb8ae9fbdcc4d8944902
  parseNounBar :: XBarType.NounBar -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8d8b043acd0cdfbc45ced2068ed7489f
  parseTenseP :: XBarType.TenseP -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(SL))L),U(1*U(1*U(1*U,1*U(1*U))),1*U(1*U(1*U),1*U(1*U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: XBarType.TenseP ->
                 case w of ww { XBarType.TenseP ww1 ww2 ->
                 case ww1 of ww3 { XBarType.DetP ww4 ->
                 case ww4 of ww5 { XBarType.DetBar ww6 ww7 ->
                 ParseTreeParse.$wparseTenseP ww6 ww7 ww2 } } }) -}
c46807c79fbc4027e79ce2ba3cb95a40
  parseVerbBar :: XBarType.VerbBar -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

